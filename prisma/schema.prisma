// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Table {
  id     String @id @default(uuid())
  number Int    @unique

  orders Order[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("table")
}

model Product {
  id     String @id @default(uuid())
  title  String @unique
  photo String
  price Float
  description String

  // orders Order[] forma altomática

  orders OrderProduct[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("product")
}

model User {
  id     String @id @default(uuid())
  nickname String @unique
  name  String @unique
  photo String?
  password String

  order Order[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user")
}

model Order {
  id     String @id @default(uuid())

  user  User @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  table Table @relation(fields:[tableID], references:[id])
  tableID String @map("table_id")

  // products Product[] forma automática

  products OrderProduct[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("order")
}

model OrderProduct {
  id String @id @default(uuid())

  quantity Int
  description String


  order Order @relation(fields: [orderId], references: [id])
  orderId String @map("order_id")

  product Product @relation(fields: [productId], references: [id])
  productId String @map("product_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([orderId, productId])
  @@map("order_to_product")
}
